print(f'Задание 1: Дано 1 число - сторона квадрата. Напиши программу, которая рассчитает 3 значения: '
      f'периметр квадрата, площадь квадрата и диагональ квадрата.')
print('Решение:')

A = 23  # сторона квадрата
P = 4 * A  # находим периметр квадрата
S = A * 2  # находим площадь квадрата
d = A * 2 ** 0.5  # находим диагональ квадрата

print('Сторона квадрата равна:', A)
print('Периметр квадрата равен:', P)
print('Площадь квадрата равна:', S)
print('Диагональ квадрата равна:', d)

print('\n'f'Задание 2: Дано квадратное уравнение ax² + bx + c = 0. Дискриминант уравнения должен быть больше 0.'
      f'Напишите программу, которая найдет корни квадратного уравнения и округлит их до 2 знаков после запятой.')
print('Решение:')

a = 1
b = 4
c = 1
D = b ** 2 - 4 * a * c
print(f'Дискриминант = {D}')
x_1 = (-b - D ** 0.5) / (2 * a)
x_2 = (-b + D ** 0.5) / (2 * a)
print(f'Корнями квадратного уравнения являются: x_1 = {round(x_1)} и x_2 = {round(x_2, 2)}')

print('\n'f'Задание 3: Дано 2 строки. Напишите программу, которая объединит эти две строки в одну и разделит их '
      f'пробелом, а также поменяет местами первые два символа первой строки на первые два символа '
      f'второй строки и наоборот.')
print('Решение:')
string_1 = 'Люблю грозу в начале мая'
string_2 = 'Когда весенний первый гром'
print('Объединяем в одну строку:', string_1 + str(' ') + string_2)
print('А теперь меняем местами: ', string_2[:2] + string_1[2:] + str(' ') + string_1[:2] + string_2[2:])

print('\n''Задание 4: Дан абсолютный путь до файла. Вывести название файла без расширения, '
      'название диска и корневую папку.')
print('Решение:')
path = r'C:\Users\av.fedorov1\PycharmProjects\PythonLearn\task_2.py'
path_index = path.split('\\')
file_name = path[path.rfind('\\') + 1: path.rfind('.')]
disk_name = path[0]
folder_name = path_index[1]
print(f'Полный путь до файла: {path} \nИмя файла: {file_name} \nИмя диска: {disk_name} \n'
      f'Имя корневой папки: {folder_name}')

print('\n'f'Задание 5: Дано 2 числа a и b. Используя форматирование строк, выведите на экран их сумму и произведение в '
      f'форматах "a + b = c" и "a * b = c".')
print('Решение:')
a_5 = 3
b_5 = 7
print(f'Сумма: {a_5} + {b_5} = {a_5 + b_5} \nПроизведение: {a_5} * {b_5} = {a_5 * b_5}')

print('\n''Задание 6: Дана строка. Напишите программу удаления символов, которые имеют нечетные значения '
      'индекса заданной строки.')
print('Решение:')
str_6 = 'Рыба-текст используется дизайнерами, проектировщиками и фронтендерами, когда нужно быстро заполнить макеты ' \
        'или прототипы содержимым. Это тестовый контент, который не должен нести никакого смысла, лишь показать ' \
        'наличие самого текста или продемонстрировать типографику в деле.'
print(f'Удалим из строки\n"{str_6}"\nвсе нечетные индексы и получим:\n"{str_6[::2]}"')

print('\n'f'Задание 7: Дано 2 строки из неповторяющихся символов: первая строка длинной 3 символа, вторая точно '
      f'содержит символы первой строки в любом порядке. Напишите программу, не используя циклы и условия,'
      f'которая находит срез минимальной длины во второй строке, который будет содержать все символы первой строки.'
      f'Например, first_string = "wtf" и second_string = "brick quz jmpy veldt whangs fox", срез минимальной длины:'
      f'\'t whangs f\'')
print('Решение:')
first_string = "wtf"
second_string = "brick quz jmpy veldt whangs fox"
index1 = second_string.find(first_string[0])
index2 = second_string.find(first_string[1])
index3 = second_string.find(first_string[2])

print(f'Срез минимальной длины в строке "{second_string}", содержащий все символы строки "{first_string}":\n'
      f'{second_string[min(index1, index2, index3): max(index1, index2, index3) + 1]}')
